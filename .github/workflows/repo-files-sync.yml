name: Repo files sync
on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

jobs:
  RepoFilesSync:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Clone repos and copy files
        run: |
          mkdir external-repos
          readarray -t routeArray < files-to-sync.txt
          echo "Cloning external repos into the external-repos folder..."
          for route in "${routeArray[@]}";
            do urlArray=(`echo $route | tr '/' ' '`)
            repoUrl="${urlArray[0]}//${urlArray[1]}/${urlArray[2]}/${urlArray[3]}"
            cd external-repos
            [ ! -d "${urlArray[3]}" ] && git clone $repoUrl || echo "Repo ${urlArray[3]} already cloned, skipping..."
            cd ..;
          done
          echo "Copying files into the files folder..."
          cd external-repos
          for route in "${routeArray[@]}";
            do filePathArray=(`echo $route | tr '/' ' '`)
            echo "- Copying $route ..."
            filePathArraySliced=("${filePathArray[@]:3}")
            function join { local IFS="$1"; shift; echo "$*"; }
            filePath=$(join / ${filePathArraySliced[@]:3})
            cd ${filePathArraySliced[0]}
            git switch ${filePathArraySliced[2]}
            decodedFilePath=`echo $filePath | perl -MURI::Escape -pe 's/.*/uri_unescape($&)/e'`
            folderPathArraySliced=("${filePathArray[@]:3:$((${#filePathArray[@]} - 3 - 1))}")
            unset folderPathArraySliced[1]
            folderPath=$(join / ${folderPathArraySliced[@]})
            decodedFolderPath=`echo $folderPath | perl -MURI::Escape -pe 's/.*/uri_unescape($&)/e'`
            mkdir -p "../../files/${decodedFolderPath}" && cp -r "$decodedFilePath" $_
            cd ..
            echo "Successfully copied.";
          done

      - name: Commit files synced
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add files/
          git commit -m 'Sync files from external repos'
          
      - name: Push files synced
        uses: ad-m/github-push-action@master
